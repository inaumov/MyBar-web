<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security-4.2.xsd">


    <!--resource security-->
    <security:http pattern="/users/register" security="none"/>
    <security:http auto-config="true" use-expressions="true" create-session="stateless">
        <security:intercept-url pattern="/users/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/>
        <security:intercept-url pattern="/**" access="isAuthenticated()"/>
        <security:csrf disabled="true"/>
        <security:http-basic/>
    </security:http>

    <bean id="userDetailsService" name="userDetailsServiceMock" class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="org.springframework.security.core.userdetails.UserDetailsService"/>
    </bean>

    <!--manager responsible for loading user account with assigned roles-->

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref="userDetailsService">
            <security:password-encoder hash="plaintext"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="springSecurityFilterChain" class="org.springframework.web.filter.DelegatingFilterProxy"/>

    <bean id="passwordEncoder" name="passwordEncoderMock" class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="org.springframework.security.crypto.password.PasswordEncoder"/>
    </bean>

</beans>